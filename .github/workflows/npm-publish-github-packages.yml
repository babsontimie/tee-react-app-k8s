name: Node.js Package - CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: tee-react-app/package-lock.json

      - run: npm ci
        working-directory: tee-react-app

      - run: npm test
        working-directory: tee-react-app

      # Save node_modules for next job
      - name: Cache node_modules
        uses: actions/cache/save@v4
        with:
          path: tee-react-app/node_modules
          key: npm-${{ hashFiles('tee-react-app/package-lock.json') }}

  publish-gpr:
    needs: build
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/
          cache: 'npm'
          cache-dependency-path: tee-react-app/package-lock.json

      # Restore cached node_modules
      - name: Restore node_modules
        uses: actions/cache/restore@v4
        with:
          path: tee-react-app/node_modules
          key: npm-${{ hashFiles('tee-react-app/package-lock.json') }}

      - name: Configure npm auth
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      - name: Bump version uniquely
        working-directory: tee-react-app
        run: |
           VERSION=$(node -p "require('./package.json').version")
           SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
           NEW_VERSION="$VERSION-${SHORT_SHA}"
           npm version $NEW_VERSION --no-git-tag-version
           
      - run: npm publish
        working-directory: tee-react-app
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache,mode=max
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Update GitOps repository
        shell: bash
        env:
          GIT_TOKEN: ${{ secrets.GITOPS_PAT }}
        run: |
          git config --global credential.helper store
          echo "https://${GIT_TOKEN}:x-oauth-basic@github.com" > ~/.git-credentials

          if [ -d gitops ]; then
            cd gitops
            git pull
          else
            git clone https://github.com/babsontimie/tee-react-app-gitops.git gitops
            cd gitops
          fi

          cd k8s-files
          sed -i "s|image: ghcr.io/.*/.*:.*|image: ghcr.io/${{ github.repository }}:${{ github.sha }}|g" deployment.yaml
          kubectl apply -f argocd-application.yaml -n argocd
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add deployment.yaml
          git commit -m "Update image to ${{ github.sha }}" || echo "No changes to commit"
          git push -f https://${GIT_TOKEN}@github.com/babsontimie/tee-react-app-gitops.git main
